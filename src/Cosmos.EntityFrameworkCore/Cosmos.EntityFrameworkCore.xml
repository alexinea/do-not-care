<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.EntityFrameworkCore</name>
    </assembly>
    <members>
        <member name="T:Cosmos.EntityFrameworkCore.Core.InternalEfCoreRegistrar">
            <summary>
            Internal efcore registrar
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Core.InternalEfCoreRegistrar.GetOptions(System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Get options
            </summary>
            <param name="optAct"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Core.InternalEfCoreRegistrar.GuardEfCoreOptions(Cosmos.EntityFrameworkCore.EfCoreOptions)">
            <summary>
            Guard efcore options
            </summary>
            <param name="options"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.DbContextBase">
            <summary>
            DbContext base
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions,Cosmos.Data.Transaction.ITransactionCallingWrapper)">
            <summary>
            DbContext base
            </summary>
            <param name="options"></param>
            <param name="transactionCallingWrapper"></param>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.DbContextBase.TransactionCallingWrapper">
            <summary>
            Transaction calling wrapper
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.InternalConnection">
            <summary>
            Internal connection...
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.SaveChangesBefore">
            <summary>
            Save change before
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.SaveChanges">
            <summary>
            Save changes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            Save changes async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.Commit">
            <summary>
            Commit
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.Commit(System.Action)">
            <summary>
            Commit
            </summary>
            <param name="callback"></param>
            <exception cref="T:Cosmos.Data.ConcurrencyException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.CommitAsync(System.Threading.CancellationToken)">
            <summary>
            Commit async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextBase.CommitAsync(System.Action,System.Threading.CancellationToken)">
            <summary>
            Commit async
            </summary>
            <param name="callback"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:Cosmos.Data.ConcurrencyException"></exception>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EfCoreException">
            <summary>
            EfCore exception
            </summary>
        </member>
        <member name="F:Cosmos.EntityFrameworkCore.EfCoreException.DEFAULT_DBCTX_FLAG">
            <summary>
            Default db ctx flag
            </summary>
        </member>
        <member name="F:Cosmos.EntityFrameworkCore.EfCoreException.DEFAULT_DBCTX_ERROR_MESSAGE">
            <summary>
            Default db ctx error message
            </summary>
        </member>
        <member name="F:Cosmos.EntityFrameworkCore.EfCoreException.DEFAULT_DBCTX_ERROR_CODE">
            <summary>
            Default db ctx error code
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Int64,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Int64,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Data.IDbConnection)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Data.IDbConnection,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="connection"></param>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Data.IDbConnection,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="connection"></param>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Data.IDbConnection,System.Int64,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="connection"></param>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EfCoreException.#ctor(System.Data.IDbConnection,System.Int64,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.EfCoreException"/>
            </summary>
            <param name="connection"></param>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.EfCoreException.Database">
            <summary>
            Gets database
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.EfCoreException.ConnectionString">
            <summary>
            Gets connection string
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.EfCoreException.ConnectionState">
            <summary>
            Gets connection state
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EfCoreOptions">
            <summary>
            EfCore options
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.EfCoreOptions.ConnectionName">
            <summary>
            Connection name
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.EfCoreOptions.ConnectionString">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.DbContextCacheExtensions">
            <summary>
            Extensions for DbContext cache
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextCacheExtensions.ClearCache(Cosmos.EntityFrameworkCore.IDbContext)">
            <summary>
            Clear cache
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.DbContextTransactionExtensions">
            <summary>
            Extensions fot DbContext transaction
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextTransactionExtensions.ToTransactionWrapper(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)">
            <summary>
            To traction wrapper
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.DbContextTransactionExtensions.ToTransactionWrapper(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction,Cosmos.Data.Transaction.TransactionAppendOperator)">
            <summary>
            To traction wrapper
            </summary>
            <param name="transaction"></param>
            <param name="operator"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.IDbContext">
            <summary>
            Interface for DbContext
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.IDbContext.SaveChanges">
            <summary>
            Save change
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.IDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            Save change async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1">
            <summary>
            Entity map scanner
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1.#ctor(System.Type)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1"/>
            </summary>
            <param name="entityMapType"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1.#ctor(System.Type,System.String)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1"/>
            </summary>
            <param name="entityMapType"></param>
            <param name="limitedAssemblies"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1.GetSkipAssembliesNamespaces">
            <summary>
            Get skip assemblies namespaces
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1.GetLimitedAssembliesNamespaces">
            <summary>
            Get limited assemblies namespaces
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.EntityMapScanner`1.TypeFilter">
            <summary>
            Type filter
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Map.MapBaseExtension">
            <summary>
            Extensions for <see cref="T:Cosmos.EntityFrameworkCore.Map.MapBase`1"/>
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBaseExtension.IsMatchedEntityMappingRule(System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            Is matched entity mapping rule
            </summary>
            <param name="type"></param>
            <param name="bodyTypes"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Map.IEntityMap">
            <summary>
            Interface for Entity Map
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.IEntityMap.Map(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Map
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Map.MapBase`1">
            <summary>
            Map base
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.Map.MapBase`1.ModelBuilder">
            <summary>
            模型生成器
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBase`1.Map(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            映射配置
            </summary>
            <param name="modelBuilder">模型生成器</param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBase`1.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
             <summary>
            Map Table
             <br />
             映射表
             </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBase`1.MapVersion(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
            <summary>
            Map Version
            <br />
            映射乐观离线锁
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBase`1.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
            <summary>
            Map Properties
            <br />
            映射属性
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBase`1.MapAssociations(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
            <summary>
            Map Associations
            <br />
            映射导航属性
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Map.MapBase`1.HasQueryFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
            <summary>
            Has query filter
            <br />
            映射过滤条件
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Map.VersionableRootMapBase`1">
            <summary>
            Versionable Root Map Base
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Store.IRepository`2">
            <summary>
            Interface for reposiory
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Store.IStore`2">
            <summary>
            Interface for store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Store.ILolitaWriteableStore`2">
            <summary>
            Interface for Lolita writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.ILolitaWriteableStore`2.ExecuteUnsafeUpdate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}},System.Func{Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}}[])">
            <summary>
            Execute unsafe update
            </summary>
            <param name="predicate"></param>
            <param name="updateFunc"></param>
            <param name="updateFunc2"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.ILolitaWriteableStore`2.ExecuteUnsafeUpdateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}},System.Threading.CancellationToken,System.Func{Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}}[])">
            <summary>
            Execute unsafe update async
            </summary>
            <param name="predicate"></param>
            <param name="updateFunc"></param>
            <param name="cancellationToken"></param>
            <param name="updateFunc2"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.ILolitaWriteableStore`2.ExecuteUnsafeDelete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}[])">
            <summary>
            Execute unsafe delete
            </summary>
            <param name="predicate"></param>
            <param name="predicate2"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.ILolitaWriteableStore`2.ExecuteUnsafeDeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}[])">
            <summary>
            Execute unsafe delete async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <param name="predicate2"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Store.RepositoryBase`3">
            <summary>
            Repository base
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.RepositoryBase`3.#ctor(`0)">
            <summary>
            Repository base
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.RepositoryBase`3.#ctor(`0,System.Boolean)">
            <summary>
            Repository base
            </summary>
            <param name="context"></param>
            <param name="includeUnsafeOpt"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.RepositoryBase`3.ScopedInitialize(Cosmos.Data.Store.IStoreContextManager)">
            <summary>
            Scoped initialize
            </summary>
            <param name="manager"></param>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.Store.RepositoryBase`3.RawTypedContext">
            <summary>
            Raw typed context
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.Store.StoreBase`2">
            <summary>
            Store base
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Store base
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Boolean)">
            <summary>
            Store base
            </summary>
            <param name="context"></param>
            <param name="includeUnsafeOpt"></param>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.Store.StoreBase`2.IncludeUnsafeOpt">
            <summary>
            Include unsafe opt
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Context">
            <summary>
            Context
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Set">
            <summary>
            Gets typed DbSet
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.Store.StoreBase`2.NoTrackingSet">
            <summary>
            No tracking set
            </summary>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Count
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Count async
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Exist(`1)">
            <summary>
            Exist
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Exist(`1[])">
            <summary>
            Exist
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Exist
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExistAsync(`1)">
            <summary>
            Exist async
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExistAsync(`1[])">
            <summary>
            Exist async
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Exist async
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindById(`1)">
            <summary>
            Find a result by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindByIds(`1[])">
            <summary>
            Find a collection of result by a set of id
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindByIds(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Find a collection of result by a set of id
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find a collection of result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Find a paged collection of result by given condition
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find first or default result
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.QueryPage(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Query paged results
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindByIdAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Find a result by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindByIdsAsync(`1[])">
            <summary>
            Find a collection of result by a set of id async
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindByIdsAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Find a collection of result by a set of id async
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Find a paged collection of result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.FindFirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find first or default result async
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.QueryPageAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Query paged results async
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Add(`0)">
            <summary>
            Add entity
            </summary>
            <param name="entity"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a set of entity
            </summary>
            <param name="entities"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Add entity async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.AddAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Add a set of entity async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Update(`0)">
            <summary>
            Update a entity
            </summary>
            <param name="entity"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a set of entity
            </summary>
            <param name="entities"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UpdateAsync(`0)">
            <summary>
            Update entity
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UpdateAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update a set of entity
            </summary>
            <param name="entities"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Remove(`1)">
            <summary>
            Remove a entity by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Remove(`0)">
            <summary>
            Remove a entity by entity
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Remove(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Remove a set of entity by a set if id
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Remove a set of entity by a set of given entity
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.Remove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.RemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Remove a entity by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.RemoveAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Remove a entity by given entity async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.RemoveAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Remove a set of entity by a set of given id async
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.RemoveAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Remove a set of given entity async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.RemoveAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExecuteUnsafeUpdate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}},System.Func{Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}}[])">
            <summary>
            执行非安全更新操作，该操作无视工作单元，直接生效于数据库。
            </summary>
            <param name="predicate"></param>
            <param name="updateFunc"></param>
            <param name="updateFunc2"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExecuteUnsafeUpdateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}},System.Threading.CancellationToken,System.Func{Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0},Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{`0}}[])">
            <summary>
            执行非安全更新操作，该操作无视工作单元，直接生效于数据库。
            </summary>
            <param name="predicate"></param>
            <param name="updateFunc"></param>
            <param name="cancellationToken"></param>
            <param name="updateFunc2"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExecuteUnsafeDelete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}[])">
            <summary>
            执行非安全删除操作，该操作无视工作单元，直接生效于数据库。
            </summary>
            <param name="predicate"></param>
            <param name="predicate2"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.ExecuteUnsafeDeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}[])">
            <summary>
            执行非安全删除操作，该操作无视工作单元，直接生效于数据库。
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <param name="predicate2"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemove(`1)">
            <summary>
            Unsafe remove
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemove(`0)">
            <summary>
            Unsafe remove
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemove(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Unsafe remove
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Unsafe remove
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Unsafe remove async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemoveAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Unsafe remove async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemoveAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Unsafe remove async
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.Store.StoreBase`2.UnsafeRemoveAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Unsafe remove async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbContextUtils">
            <summary>
            Utils for <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextUtils.GetDbContext``1(Microsoft.EntityFrameworkCore.DbSet{``0})">
            <summary>
            Get <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/>
            </summary>
            <param name="dbSet"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DatabaseExtensions.CreateVisitor(Microsoft.EntityFrameworkCore.Storage.Database,Remotion.Linq.QueryModel)">
            <summary>
            Create visitor
            </summary>
            <param name="self"></param>
            <param name="qm"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbSetExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSetExtensions.SetField``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Set field
            </summary>
            <param name="self"></param>
            <param name="setValueExpression"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSetExtensions.SetField``2(Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Set field
            </summary>
            <param name="self"></param>
            <param name="setValueExpression"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.LolitaDbOptionExtension">
            <summary>
            Extensions for Lolita DbOption
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.LolitaDbOptionExtension.LogFragment">
            <summary>
            Log fragment
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Apply services
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtension.GetServiceProviderHashCode">
            <summary>
            Get service provider hashcode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtension.Validate(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
            Validate
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.LolitaDbOptionExtensions">
            <summary>
            Extensions for lolita DbOption
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtensions.UseLolita(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Use lolita
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtensions.UseLolita``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0})">
            <summary>
            Use lolita
            </summary>
            <param name="self"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtensions.UseLolita(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Use lolita
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.LolitaDbOptionExtensions.UseLolita``1(Microsoft.EntityFrameworkCore.DbContextOptions{``0})">
            <summary>
            Use lolita
            </summary>
            <param name="self"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DeleteExtensions">
            <summary>
            Extensions for delete
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DeleteExtensions.GenerateBulkDeleteSql``1(System.Linq.IQueryable{``0})">
            <summary>
            Generate bulk delete sql
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DeleteExtensions.Delete``1(System.Linq.IQueryable{``0})">
            <summary>
            Delete
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DeleteExtensions.DeleteAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="self"></param>
            <param name="cancellationToken"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.UpdateExtensions">
            <summary>
            Extensions for update
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.UpdateExtensions.GenerateBulkUpdateSql``1(Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{``0})">
            <summary>
            Generate bulk update sql
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.UpdateExtensions.Update``1(Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{``0})">
            <summary>
            Update
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.UpdateExtensions.UpdateAsync``1(Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{``0},System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="self"></param>
            <param name="cancellationToken"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValuingExtensions">
            <summary>
            Extensions for Valuing
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.WithSQL``2(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,``1},System.Func{System.String,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,System.String},System.Object[])">
            <summary>
            With sql
            </summary>
            <param name="self"></param>
            <param name="sql"></param>
            <param name="parameters"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.WithSQL``2(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,``1},System.Func{System.String,System.String},System.Object[])">
            <summary>
            With SQL
            </summary>
            <param name="self"></param>
            <param name="sql"></param>
            <param name="parameters"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.WithValue``2(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,``1},System.Object)">
            <summary>
            With value
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int64},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int64},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int64},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int64},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int64},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int32},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int32},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int32},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int32},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int32},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int16},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int16},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int16},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int16},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Int16},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt64},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt64},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt64},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt64},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt64},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt32},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt32},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt32},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt32},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt32},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt16},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt16},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt16},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt16},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.UInt16},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Double},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Double},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Double},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Double},System.Object)">
            <summary>
            Divide
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Double},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Plus``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Single},System.Object)">
            <summary>
            Plus
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Subtract``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Single},System.Object)">
            <summary>
            Subtract
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Multiply``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Single},System.Object)">
            <summary>
            Multiply
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Divide``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Single},System.Object)">
            <summary>
            Divid
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Mod``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.Single},System.Object)">
            <summary>
            Mod
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Append``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.String},System.String)">
            <summary>
            Append
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.Prepend``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.String},System.String)">
            <summary>
            Prepend
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddMilliseconds``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add milliseconds
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddSeconds``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add seconds
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddMinutes``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add minutes
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddHours``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add hours
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddDays``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add days
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddMonths``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add months
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValuingExtensions.AddYears``1(Pomelo.EntityFrameworkCore.Lolita.LolitaValuing{``0,System.DateTime},System.Int32)">
            <summary>
            Add years
            </summary>
            <param name="self"></param>
            <param name="value"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.IncludeExtensions">
            <summary>
            Execute for include
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.IncludeExtensions.IncludeIfNeed``2(System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Include if need...
            </summary>
            <param name="source"></param>
            <param name="condition"></param>
            <param name="property"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.IncludeExtensions.IncludeIfNeed``2(System.Linq.IQueryable{``0},System.Func{System.Boolean},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Include if need...
            </summary>
            <param name="source"></param>
            <param name="condition"></param>
            <param name="property"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.QueryToSqlExtensions">
            <summary>
            Extensions for QueryToSql
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.QueryToSqlExtensions.ToSql``1(System.Linq.IQueryable{``0})">
            <summary>
            To sql
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.QueryToSqlExtensions.ToUnevaluated``1(System.Linq.IQueryable{``0})">
            <summary>
            To Unevaluated
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.QueryToSqlExtensions.CompileQuery``1(System.Linq.IQueryable{``0})">
            <summary>
            Compile query
            </summary>
            <param name="self"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.QueryToSqlExtensions.CreateVisitor(Microsoft.EntityFrameworkCore.Storage.Database,Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory,Remotion.Linq.QueryModel)">
            <summary>
            Create visitor
            </summary>
            <param name="self"></param>
            <param name="factory"></param>
            <param name="qm"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor">
            <summary>
            Default Lolita Delete Executor
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
            Create a new instance of <see cref="T:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor"/>
            </summary>
            <param name="currentDbContext"></param>
            <param name="sqlGenerationHelper"></param>
            <param name="dbSetFinder"></param>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.ParseTableName(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
            Parse table name
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.GetTableName(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
            Get table name
            </summary>
            <param name="et"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.GetFullTableName(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
            Get full table name
            </summary>
            <param name="et"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.GenerateSql``1(System.Linq.IQueryable{``0})">
            <summary>
            Generate sql
            </summary>
            <param name="lolita"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.ParseWhere(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,System.String)">
            <summary>
            Parse where
            </summary>
            <param name="visitor"></param>
            <param name="Table"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.Execute(Microsoft.EntityFrameworkCore.DbContext,System.String)">
            <summary>
            Execute
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.DefaultLolitaDeleteExecutor.ExecuteAsync(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Delete.ILolitaDeleteExecutor">
            <summary>
            Interface for lolita delete executor
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.ILolitaDeleteExecutor.GenerateSql``1(System.Linq.IQueryable{``0})">
            <summary>
            Generate sql
            </summary>
            <param name="lolita"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.ILolitaDeleteExecutor.Execute(Microsoft.EntityFrameworkCore.DbContext,System.String)">
            <summary>
            Execute
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Delete.ILolitaDeleteExecutor.ExecuteAsync(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1">
            <summary>
            Lolita setting
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1.Query">
            <summary>
            Query
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1.FullTable">
            <summary>
            Full table
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1.ShortTable">
            <summary>
            Short table
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1.Operations">
            <summary>
            operations
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.LolitaSetting`1.GetService``1">
            <summary>
            Get services
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.LolitaValuing`2">
            <summary>
            Lolita valuing
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaValuing`2.Inner">
            <summary>
            Inner setting
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.LolitaValuing`2.GetService``1">
            <summary>
            Get servce
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.LolitaValuing`2.CurrentField">
            <summary>
            Gets or sets current field
            </summary>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser">
            <summary>
            Default field parser
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
            Create a new instance of <see cref="T:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser"/>
            </summary>
            <param name="currentDbContext"></param>
            <param name="sqlGenerationHelper"></param>
            <param name="dbSetFinder"></param>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.ParseField(Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo)">
            <summary>
            Parse field
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.ParseFullTable(Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo)">
            <summary>
            Parse full table
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.ParseShortTable(Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo)">
            <summary>
            Parse short table
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.GetTableName(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
            Get table name
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.GetSchemaName(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
            Get schema name
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultFieldParser.VisitField``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Visit field
            </summary>
            <param name="exp"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor">
            <summary>
            Default Lolita Update Executor
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
            Create a new instance of <see cref="T:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor"/>
            </summary>
            <param name="currentDbContext"></param>
            <param name="sqlGenerationHelper"></param>
            <param name="dbSetFinder"></param>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor.GenerateSql``1(Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{``0},Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
            Generate sql
            </summary>
            <param name="lolita"></param>
            <param name="visitor"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor.ParseWhere(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,System.String)">
            <summary>
            Parse where
            </summary>
            <param name="visitor"></param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor.Execute(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Object[])">
            <summary>
            Execute
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultLolitaUpdateExecutor.ExecuteAsync(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            Execute async
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultSetFieldSqlGenerator">
            <summary>
            Default set field sql generator
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultSetFieldSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
            Create a new instance of <see cref="T:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultSetFieldSqlGenerator"/>
            </summary>
            <param name="sqlGenerationHelper"></param>
        </member>
        <member name="F:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultSetFieldSqlGenerator.SqlGenerationHelper">
            <summary>
            Sql generation helper
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.DefaultSetFieldSqlGenerator.TranslateToSql(Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo)">
            <summary>
            Translate to sql
            </summary>
            <param name="operation"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.IFieldParser">
            <summary>
            Interface for field paeser
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.IFieldParser.VisitField``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Visit field
            </summary>
            <param name="exp"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.IFieldParser.ParseField(Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo)">
            <summary>
            Parser field
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.IFieldParser.ParseFullTable(Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo)">
            <summary>
            Parser full table
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.IFieldParser.ParseShortTable(Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo)">
            <summary>
            Parser short table
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.ILolitaUpdateExecutor">
            <summary>
            Interface for Lolita Update executor
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.ILolitaUpdateExecutor.GenerateSql``1(Pomelo.EntityFrameworkCore.Lolita.LolitaSetting{``0},Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
            Generate sql
            </summary>
            <param name="lolita"></param>
            <param name="visitor"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.ILolitaUpdateExecutor.Execute(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Object[])">
            <summary>
            Execute
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.ILolitaUpdateExecutor.ExecuteAsync(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            Execute async
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.ISetFieldSqlGenerator">
            <summary>
            Interface for set field sql generator
            </summary>
        </member>
        <member name="M:Pomelo.EntityFrameworkCore.Lolita.Update.ISetFieldSqlGenerator.TranslateToSql(Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo)">
            <summary>
            Translate to sql
            </summary>
            <param name="operation"></param>
            <returns></returns>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo">
            <summary>
            Set field info
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo.Field">
            <summary>
            FIeld
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SetFieldInfo.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo">
            <summary>
            Sql field info
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo.Schema">
            <summary>
            Schema
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="P:Pomelo.EntityFrameworkCore.Lolita.Update.SqlFieldInfo.Column">
            <summary>
            Column
            </summary>
        </member>
    </members>
</doc>
